cabal-version:       2.4
name:                yieldfsm-riscv
version:             0.1
license:             BSD-2-Clause
author:              Marek Materzok <tilk@tilk.eu>
maintainer:          Marek Materzok <tilk@tilk.eu>
category:            Hardware
synopsis:            RISC-V multicycle core using YieldFSM

source-repository head
  type: git
  location: https://github.com/tilk/yieldfsm-riscv

common common-options
  default-extensions:
    BangPatterns
    BinaryLiterals
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveAnyClass
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveLift
    DeriveTraversable
    DerivingStrategies
    InstanceSigs
    KindSignatures
    LambdaCase
    NoStarIsType
    PolyKinds
    RankNTypes
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators
    ViewPatterns

    -- TemplateHaskell is used to support convenience functions such as
    -- 'listToVecTH' and 'bLit'.
    TemplateHaskell
    QuasiQuotes

    -- Prelude isn't imported by default as Clash offers Clash.Prelude
    NoImplicitPrelude
  ghc-options:
    -Wall -Wcompat
    -haddock

    -- Plugins to support type-level constraint solving on naturals
    -fplugin GHC.TypeLits.Extra.Solver
    -fplugin GHC.TypeLits.Normalise
    -fplugin GHC.TypeLits.KnownNat.Solver

    -fconstraint-solver-iterations=12

    -- Clash needs access to the source code in compiled modules
    -fexpose-all-unfoldings

    -- Worker wrappers introduce unstable names for functions that might have
    -- blackboxes attached for them. You can disable this, but be sure to add
    -- a no-specialize pragma to every function with a blackbox.
    -fno-worker-wrapper

  build-depends:
    base >= 4.14 && < 4.15,
    yieldfsm >= 0.1 && < 0.2,
    Cabal,
    -- clash-prelude will set suitable version bounds for the plugins
    clash-prelude >= 1.2.5 && < 1.6,
    ghc-typelits-natnormalise,
    ghc-typelits-extra,
    ghc-typelits-knownnat

custom-setup
  setup-depends:
    base          >= 4.11 && <5,
    Cabal         >= 2.4,
    cabal-doctest >= 1.0.1 && <1.1

library
  import: common-options
  hs-source-dirs: src
  exposed-modules:
    FSM.RiscV
    FSM.RiscV.Arch
    FSM.RiscV.Alu
    FSM.RiscV.RegFile
    FSM.RiscV.Immediate
    FSM.RiscV.Wishbone
    FSM.RiscV.ExplicitControl
    FSM.RiscV.ExplicitData
    FSM.RiscV.YieldControl
    FSM.RiscV.YieldCtlData
    FSM.RiscV.ExampleTop

-- Builds the executable 'clash', with simple project in scope
executable clash
  main-is: bin/Clash.hs
  default-language: Haskell2010
  Build-Depends: base, clash-ghc, yieldfsm-riscv
  if !os(Windows)
    ghc-options: -dynamic

-- Builds the executable 'clashi', with simple project in scope
executable clashi
  main-is: bin/Clashi.hs
  default-language: Haskell2010
  if !os(Windows)
    ghc-options: -dynamic
  build-depends: base, clash-ghc, yieldfsm-riscv

