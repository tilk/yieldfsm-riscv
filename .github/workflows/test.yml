name: Tests
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Haskell
      uses: haskell/actions/setup@v1
      with:
        enable-stack: true
        stack-setup-ghc: true
        stack-no-global: true
    - name: Cache stack
      uses: actions/cache@v1
      env:
        cache-name: cache-stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Cache cabal
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install Stack dependencies
      run: |
        stack update
        stack build --only-dependencies
    - name: Build
      run: |
        stack build
        stack run clash -- -fclash-spec-limit=30 --verilog FSM.RiscV.ExampleTop
    - name: Build RISC-V ISA tests
      uses: docker://tilk/hardware:latest
      with:
        args: /bin/sh -c "cd riscv-tests && make"
    - name: Run tests
      uses: docker://tilk/hardware:latest
      with:
        args: /bin/sh -c "cd testbench && make"
    - name: Test synthesis
      uses: docker://tilk/hardware:latest
      with:
        args: /bin/sh -c "cd synth  && make"
